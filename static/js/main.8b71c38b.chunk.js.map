{"version":3,"sources":["search/SearchMap.ts","search/utils/Vec2d.ts","search/methods/bi-directional-bfs.ts","search/utils/Queue.ts","search/methods/breadth-first-search.ts","search/search.ts","PathFinder.tsx","search/methods/index.ts","App.tsx","index.tsx"],"names":["Square","Vec2d","x","y","v","this","Direction","SearchMap","width","height","rows","push","Array","fill","Empty","pos","square","isWithinBounds","Error","toString","map","neighbours","dx","dy","neighbour","add","isEmpty","length","Queue","items","shift","size","bfs","start","params","visited","Set","queue","searchNode","dequeue","current","found","equals","target","getNeighbours","neighbourPos","hash","has","enqueue","prev","f","rewind","node","path","unshift","MovingState","methods","breadthFirstSearch","visitedForward","visitedBackward","direction","Forward","Backward","sleep","ms","a","Promise","r","setTimeout","getInitialMap","getInitialStart","getInitialTarget","PathFinder","useState","setMap","setStart","setTarget","setVisited","solution","setSolution","None","moving","setMoving","isDrawing","setIsDrawing","handleMouseDown","Start","Target","withCell","Wall","handleMouseEnter","handleStartClick","handleResetClick","getClassName","className","onClick","generateWalls","squares","onMouseUp","onMouseDown","onMouseEnter","buildMapSquares","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJAEYA,E,4FCFSC,E,WACnB,WAAqBC,EAAoBC,GAAY,yBAAhCD,IAA+B,KAAXC,I,uCAEzC,SAAWC,GACT,OAAO,IAAIH,EAAMI,KAAKH,EAAIE,EAAEF,EAAGG,KAAKF,EAAIC,EAAED,K,oBAG5C,SAAcC,GACZ,OAAOC,KAAKH,IAAME,EAAEF,GAAKG,KAAKF,IAAMC,EAAED,I,sBAGxC,WACE,MAAM,IAAN,OAAWE,KAAKH,EAAhB,aAAsBG,KAAKF,EAA3B,S,eDVQH,O,iBAAAA,I,gBAAAA,M,SEEPM,EFGgBC,E,WAGnB,WAAmBC,EAAeC,GAChC,IADiD,yBAF3CC,KAAmB,GAGlBD,KACLJ,KAAKK,KAAKC,KAAKC,MAAMJ,GAAOK,KAAKb,EAAOc,Q,4CAI5C,SAAgBC,EAAYC,GAC1B,IAAKX,KAAKY,eAAeF,GACvB,MAAM,IAAIG,MAAJ,yBAA4BH,EAAII,aAGxC,IAAMC,EAAM,IAAIb,EAAUF,KAAKG,MAAOH,KAAKI,QAK3C,OAHAW,EAAIV,KAAOL,KAAKK,KAChBU,EAAIV,KAAKK,EAAIZ,GAAGY,EAAIb,GAAKc,EAElBI,I,qBAGT,SAAeL,GACb,OAAOV,KAAKK,KAAKK,EAAIZ,GAAGY,EAAIb,KAAOF,EAAOc,Q,2BAG5C,SAAqBC,GAUnB,IATA,IAAMM,EAAa,GASnB,MAPa,CACX,CAAEC,GAAI,EAAGC,GAAI,GACb,CAAED,GAAI,EAAGC,GAAI,GACb,CAAED,IAAK,EAAGC,GAAI,GACd,CAAED,GAAI,EAAGC,IAAK,IAGhB,eAA+B,CAA1B,WAAQD,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,GACTC,EAAYT,EAAIU,IAAI,IAAIxB,EAAMqB,EAAIC,IAEnClB,KAAKY,eAAeO,KAIrBnB,KAAKqB,QAAQF,IACfH,EAAWV,KAAKa,IAIpB,OAAOH,I,4BAGT,SAAuBN,GACrB,OAAOA,EAAIb,GAAK,GAAKa,EAAIZ,GAAK,GAAKY,EAAIb,EAAIG,KAAKG,OAASO,EAAIZ,EAAIE,KAAKI,S,iBAGxE,WACE,OAAOJ,KAAKK,KAAK,GAAGiB,S,kBAGtB,WACE,OAAOtB,KAAKK,KAAKiB,S,2BAGnB,WACEtB,KAAKK,KAAO,CACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAA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","file":"static/js/main.8b71c38b.chunk.js","sourcesContent":["import Vec2d from \"./utils/Vec2d\";\n\nexport enum Square {\n  Empty,\n  Wall,\n}\n\nexport default class SearchMap {\n  private rows: Square[][] = [];\n\n  public constructor(width: number, height: number) {\n    while (height--) {\n      this.rows.push(Array(width).fill(Square.Empty));\n    }\n  }\n\n  public withCell(pos: Vec2d, square: Square): SearchMap {\n    if (!this.isWithinBounds(pos)) {\n      throw new Error(`Out of bounds: ${pos.toString()}`);\n    }\n\n    const map = new SearchMap(this.width, this.height);\n\n    map.rows = this.rows;\n    map.rows[pos.y][pos.x] = square;\n\n    return map;\n  }\n\n  public isEmpty(pos: Vec2d): boolean {\n    return this.rows[pos.y][pos.x] === Square.Empty;\n  }\n\n  public getNeighbours(pos: Vec2d): Vec2d[] {\n    const neighbours = [];\n\n    const dirs = [\n      { dx: 1, dy: 0 },\n      { dx: 0, dy: 1 },\n      { dx: -1, dy: 0 },\n      { dx: 0, dy: -1 },\n    ];\n\n    for (const { dx, dy } of dirs) {\n      const neighbour = pos.add(new Vec2d(dx, dy));\n\n      if (!this.isWithinBounds(neighbour)) {\n        continue;\n      }\n\n      if (this.isEmpty(neighbour)) {\n        neighbours.push(neighbour);\n      }\n    }\n\n    return neighbours;\n  }\n\n  private isWithinBounds(pos: Vec2d): boolean {\n    return pos.x >= 0 && pos.y >= 0 && pos.x < this.width && pos.y < this.height;\n  }\n\n  public get width(): number {\n    return this.rows[0].length;\n  }\n\n  public get height(): number {\n    return this.rows.length;\n  }\n\n  public generateWalls(): void {\n    this.rows = [\n      [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0],\n      [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0],\n      [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0],\n      [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],\n      [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0],\n      [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n      [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0],\n      [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1],\n      [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],\n      [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0],\n      [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0],\n      [1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n      [1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1],\n      [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1],\n      [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0],\n      [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1],\n      [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0],\n      [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0],\n      [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0],\n    ];\n  }\n}\n","export default class Vec2d {\n  constructor(readonly x: number, readonly y: number) {}\n\n  public add(v: Vec2d): Vec2d {\n    return new Vec2d(this.x + v.x, this.y + v.y);\n  }\n\n  public equals(v: Vec2d): boolean {\n    return this.x === v.x && this.y === v.y;\n  }\n\n  public toString(): string {\n    return `(${this.x}, ${this.y})`;\n  }\n}\n","import { SearchState, SearchNode, SearchParams, SearchMethod } from \"../search\";\nimport Queue from \"../utils/Queue\";\nimport Vec2d from \"../utils/Vec2d\";\n\nenum Direction {\n  Forward,\n  Backward,\n}\n\ntype BiDirSearchNode = {\n  searchNode: SearchNode;\n  direction: Direction;\n};\n\nconst start = function* (params: SearchParams): Generator<SearchState> {\n  const visitedForward = new Set<string>([params.start.toString()]);\n  const visitedBackward = new Set<string>([params.target.toString()]);\n\n  const queue = new Queue<BiDirSearchNode>([\n    {\n      searchNode: { pos: params.start },\n      direction: Direction.Forward,\n    },\n    {\n      searchNode: { pos: params.target },\n      direction: Direction.Backward,\n    },\n  ]);\n\n  while (!queue.isEmpty()) {\n    const { searchNode, direction } = queue.dequeue() as BiDirSearchNode;\n\n    const found =\n      (direction === Direction.Forward && visitedBackward.has(searchNode.pos.toString())) ||\n      (direction === Direction.Backward && visitedForward.has(searchNode.pos.toString()));\n\n    yield { current: searchNode, visited: new Set([...visitedForward, ...visitedBackward]), found };\n\n    for (const neighbourPos of params.map.getNeighbours(searchNode.pos)) {\n      const hash = neighbourPos.toString();\n\n      if (direction === Direction.Forward && !visitedForward.has(hash)) {\n        visitedForward.add(hash);\n        queue.enqueue({\n          searchNode: {\n            pos: neighbourPos,\n            prev: searchNode,\n          },\n          direction,\n        });\n      }\n\n      if (direction === Direction.Backward && !visitedBackward.has(hash)) {\n        visitedBackward.add(hash);\n        queue.enqueue({\n          searchNode: {\n            pos: neighbourPos,\n            prev: searchNode,\n          },\n          direction,\n        });\n      }\n    }\n  }\n};\n\nconst rewind = (node: SearchNode): Vec2d[] => {\n  return [];\n};\n\nconst biDirBfs: SearchMethod = { start, rewind };\n\nexport default biDirBfs;\n","export default class Queue<T> {\n  constructor(private items: T[] = []) {}\n\n  public enqueue(...items: T[]): void {\n    this.items.push(...items);\n  }\n\n  public dequeue(): T | undefined {\n    return this.items.shift();\n  }\n\n  public isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  public get size(): number {\n    return this.items.length;\n  }\n}\n","import { SearchState, SearchNode, SearchParams, SearchMethod, rewind } from \"../search\";\nimport Queue from \"../utils/Queue\";\n\nconst start = function* (params: SearchParams): Generator<SearchState> {\n  const visited = new Set<string>([params.start.toString()]);\n  const queue = new Queue<SearchNode>([{ pos: params.start }]);\n\n  while (!queue.isEmpty()) {\n    const searchNode = queue.dequeue() as SearchNode;\n\n    yield { current: searchNode, visited, found: searchNode.pos.equals(params.target) };\n\n    for (const neighbourPos of params.map.getNeighbours(searchNode.pos)) {\n      const hash = neighbourPos.toString();\n\n      if (!visited.has(hash)) {\n        visited.add(hash);\n        queue.enqueue({\n          pos: neighbourPos,\n          prev: searchNode,\n        });\n      }\n    }\n  }\n};\n\nconst bfs: SearchMethod = { start, rewind };\n\nexport default bfs;\n","import SearchMap from \"./SearchMap\";\nimport Vec2d from \"./utils/Vec2d\";\n\nexport type SearchParams = {\n  map: SearchMap;\n  start: Vec2d;\n  target: Vec2d;\n};\n\nexport type SearchNode = {\n  pos: Vec2d;\n  prev?: SearchNode;\n};\n\nexport type SearchState = {\n  current: SearchNode;\n  visited: Set<string>;\n  found: boolean;\n};\n\nexport type SearchMethod = {\n  start: (params: SearchParams) => Generator<SearchState>;\n  rewind: (node: SearchNode) => Vec2d[];\n};\n\nexport const rewind = (node: SearchNode): Vec2d[] => {\n  const path = [];\n\n  while (node.prev) {\n    path.unshift(node.pos);\n    node = node.prev;\n  }\n\n  return path;\n};\n","import { useState } from \"react\";\nimport Vec2d from \"./search/utils/Vec2d\";\nimport SearchMap, { Square } from \"./search/SearchMap\";\nimport methods from \"./search/methods\";\n\nconst sleep = async (ms: number): Promise<void> => {\n  await new Promise((r) => setTimeout(r, ms));\n};\n\nenum MovingState {\n  None,\n  Start,\n  Target,\n}\n\nconst getInitialMap = () => new SearchMap(40, 20);\nconst getInitialStart = () => new Vec2d(1, 1);\nconst getInitialTarget = () => new Vec2d(38, 18);\n\nconst PathFinder = (): JSX.Element => {\n  const [map, setMap] = useState(getInitialMap());\n  const [start, setStart] = useState(getInitialStart());\n  const [target, setTarget] = useState(getInitialTarget());\n  const [visited, setVisited] = useState(new Set<string>());\n  const [solution, setSolution] = useState(new Set<string>());\n\n  const [moving, setMoving] = useState(MovingState.None);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  const handleMouseUp = (): void => {\n    setMoving(MovingState.None);\n    setIsDrawing(false);\n  };\n\n  const handleMouseDown = (pos: Vec2d): void => {\n    if (pos.equals(start)) {\n      setMoving(MovingState.Start);\n      return;\n    }\n\n    if (pos.equals(target)) {\n      setMoving(MovingState.Target);\n      return;\n    }\n\n    setIsDrawing(true);\n    setMap(map.withCell(pos, map.isEmpty(pos) ? Square.Wall : Square.Empty));\n  };\n\n  const handleMouseEnter = (pos: Vec2d): void => {\n    if (moving === MovingState.Start) {\n      setStart(pos);\n      return;\n    }\n\n    if (moving === MovingState.Target) {\n      setTarget(pos);\n      return;\n    }\n\n    if (isDrawing) {\n      setMap(map.withCell(pos, Square.Wall));\n    }\n  };\n\n  const handleStartClick = async (): Promise<void> => {\n    for (const { current, found, visited } of methods[\"breadth-first-search\"].start({ map, start, target })) {\n      setVisited(new Set([...visited]));\n\n      if (found) {\n        for (const pos of methods[\"breadth-first-search\"].rewind(current)) {\n          setSolution(new Set([...solution.add(pos.toString())]));\n          await sleep(20);\n        }\n\n        break;\n      }\n\n      await sleep(10);\n    }\n  };\n\n  const handleResetClick = (): void => {\n    setMap(getInitialMap());\n    setStart(getInitialStart());\n    setTarget(getInitialTarget());\n    setVisited(new Set<string>());\n    setSolution(new Set<string>());\n  };\n\n  const handleGenerateMapClick = (): void => {\n    handleResetClick();\n    const map = getInitialMap();\n    map.generateWalls();\n    setMap(map);\n  };\n\n  const getClassName = (pos: Vec2d): string => {\n    if (!map.isEmpty(pos)) {\n      return \"wall\";\n    }\n\n    if (start.equals(pos)) {\n      return \"start\";\n    }\n\n    if (target.equals(pos)) {\n      return \"target\";\n    }\n\n    if (solution.has(pos.toString())) {\n      return \"solution\";\n    }\n\n    if (visited.has(pos.toString())) {\n      return \"visited\";\n    }\n\n    return \"\";\n  };\n\n  const buildMapSquares = (): JSX.Element[] => {\n    const squares = [];\n\n    for (let y = 0; y < map.height; ++y) {\n      for (let x = 0; x < map.width; ++x) {\n        const pos = new Vec2d(x, y);\n\n        squares.push(\n          <div\n            key={pos.toString()}\n            className={getClassName(pos)}\n            onMouseUp={() => handleMouseUp()}\n            onMouseDown={() => handleMouseDown(pos)}\n            onMouseEnter={() => handleMouseEnter(pos)}\n          />\n        );\n      }\n    }\n\n    return squares;\n  };\n\n  return (\n    <div className=\"PathFinder\">\n      <div className=\"Controls\">\n        <button onClick={handleStartClick}>Start</button>\n        <button onClick={handleResetClick}>Reset</button>\n        <button onClick={handleGenerateMapClick}>Generate map</button>\n      </div>\n      <div className=\"Map\">{buildMapSquares()}</div>\n    </div>\n  );\n};\n\nexport default PathFinder;\n","import breadthFirstSearch from \"./breadth-first-search\";\nimport biDirectionalBfs from \"./bi-directional-bfs\";\n\nconst methods = {\n  \"breadth-first-search\": breadthFirstSearch,\n  \"bi-directional-bfs\": biDirectionalBfs,\n};\n\nexport default methods;\n","import PathFinder from \"./PathFinder\";\n\nconst App = () => <PathFinder />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}