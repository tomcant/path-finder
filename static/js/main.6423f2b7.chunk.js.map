{"version":3,"sources":["PathFinder/SearchMap.ts","PathFinder/utils/vec2d.ts","PathFinder/Components/SearchMap.tsx","PathFinder/utils/queue.ts","PathFinder/path-finder.ts","PathFinder/utils/sleep.ts","PathFinder/Components/PathFinder.tsx","App.tsx","index.tsx"],"names":["Cell","Vec2d","x","y","v","this","SearchMap","width","height","rows","i","push","Array","fill","Empty","pos","cell","isWithinBounds","getCell","neighbours","dx","dy","neighbour","add","isEmpty","length","toCssClass","Visited","Wall","Solution","props","className","searchParams","map","getRows","row","rowIdx","cellIdx","onMouseUp","onMouseDown","onMouseEnter","start","target","Queue","items","shift","size","breadthFirstSearch","params","visited","Set","toString","queue","undefined","node","dequeue","foundTarget","equals","getNeighbours","neighbourPos","hash","has","enqueue","prev","f","sleep","ms","a","Promise","r","setTimeout","getInitialSearchParams","PathFinder","useState","setSearchParams","isDrawing","setIsDrawing","isMovingStart","setIsMovingStart","isMovingTarget","setIsMovingTarget","setCell","handleStartClick","searchState","targetNode","path","unshift","onClick","generateWalls","setStart","setTarget","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJAEYA,E,2FCFSC,E,WACnB,WAAqBC,EAAoBC,GAAY,yBAAhCD,IAA+B,KAAXC,I,uCAEzC,SAAWC,GACT,OAAO,IAAIH,EAAMI,KAAKH,EAAIE,EAAEF,EAAGG,KAAKF,EAAIC,EAAED,K,oBAG5C,SAAcC,GACZ,OAAOC,KAAKH,IAAME,EAAEF,GAAKG,KAAKF,IAAMC,EAAED,I,sBAGxC,WACE,MAAM,IAAN,OAAWE,KAAKH,EAAhB,aAAsBG,KAAKF,EAA3B,S,eDVQH,O,iBAAAA,I,qBAAAA,I,eAAAA,I,wBAAAA,M,SAOSM,E,WAGnB,WAAmBC,EAAeC,GAAiB,yBAF3CC,UAE0C,EAChDJ,KAAKI,KAAO,GAGZ,IADA,IAAIC,EAAI,EACDA,IAAMF,GACXH,KAAKI,KAAKE,KAAKC,MAAML,GAAOM,KAAKb,EAAKc,Q,2CAI1C,SAAeC,EAAYC,GACrBX,KAAKY,eAAeF,KACtBV,KAAKI,KAAKM,EAAIZ,GAAGY,EAAIb,GAAKc,K,qBAI9B,SAAeD,GACb,GAAIV,KAAKY,eAAeF,GACtB,OAAOV,KAAKI,KAAKM,EAAIZ,GAAGY,EAAIb,K,qBAIhC,WACE,OAAOG,KAAKI,O,qBAGd,SAAeM,GACb,OAAOV,KAAKa,QAAQH,KAASf,EAAKc,Q,2BAGpC,SAAqBC,GAUnB,IATA,IAAMI,EAAa,GASnB,MAPa,CACX,CAAEC,GAAI,EAAGC,GAAI,GACb,CAAED,GAAI,EAAGC,GAAI,GACb,CAAED,IAAK,EAAGC,GAAI,GACd,CAAED,GAAI,EAAGC,IAAK,IAGhB,eAA+B,CAA1B,WAAQD,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,GACTC,EAAYP,EAAIQ,IAAI,IAAItB,EAAMmB,EAAIC,IAEpChB,KAAKmB,QAAQF,IACfH,EAAWR,KAAKW,GAIpB,OAAOH,I,4BAGT,SAAuBJ,GACrB,OAAOA,EAAIb,GAAK,GAAKa,EAAIZ,GAAK,GAAKY,EAAIb,EAAIG,KAAKI,KAAK,GAAGgB,QAAUV,EAAIZ,EAAIE,KAAKI,KAAKgB,S,2BAGtF,WACEpB,KAAKI,KAAO,CACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAA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","file":"static/js/main.6423f2b7.chunk.js","sourcesContent":["import Vec2d from \"./utils/vec2d\";\n\nexport enum Cell {\n  Empty = 0,\n  Visited = 1,\n  Wall = 2,\n  Solution = 3,\n}\n\nexport default class SearchMap {\n  private rows: Cell[][];\n\n  public constructor(width: number, height: number) {\n    this.rows = [];\n\n    let i = 0;\n    while (i++ < height) {\n      this.rows.push(Array(width).fill(Cell.Empty));\n    }\n  }\n\n  public setCell(pos: Vec2d, cell: Cell): void {\n    if (this.isWithinBounds(pos)) {\n      this.rows[pos.y][pos.x] = cell;\n    }\n  }\n\n  public getCell(pos: Vec2d): Cell | undefined {\n    if (this.isWithinBounds(pos)) {\n      return this.rows[pos.y][pos.x];\n    }\n  }\n\n  public getRows(): Cell[][] {\n    return this.rows;\n  }\n\n  public isEmpty(pos: Vec2d): boolean {\n    return this.getCell(pos) === Cell.Empty;\n  }\n\n  public getNeighbours(pos: Vec2d): Vec2d[] {\n    const neighbours = [];\n\n    const dirs = [\n      { dx: 1, dy: 0 },\n      { dx: 0, dy: 1 },\n      { dx: -1, dy: 0 },\n      { dx: 0, dy: -1 },\n    ];\n\n    for (const { dx, dy } of dirs) {\n      const neighbour = pos.add(new Vec2d(dx, dy));\n\n      if (this.isEmpty(neighbour)) {\n        neighbours.push(neighbour);\n      }\n    }\n\n    return neighbours;\n  }\n\n  private isWithinBounds(pos: Vec2d): boolean {\n    return pos.x >= 0 && pos.y >= 0 && pos.x < this.rows[0].length && pos.y < this.rows.length;\n  }\n\n  public generateWalls(): void {\n    this.rows = [\n      [0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 0, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2],\n      [0, 0, 0, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0],\n      [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0],\n      [0, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0],\n      [0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0],\n      [0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 0, 2],\n      [2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2],\n      [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2],\n      [2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 2],\n      [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2],\n      [2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2],\n      [2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 2],\n      [2, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2],\n      [2, 2, 2, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2],\n      [0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 2, 0, 2],\n      [0, 2, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0],\n      [0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 0, 2, 0, 2, 2, 0],\n      [0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 0, 2, 0, 0],\n      [0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ];\n  }\n}\n","export default class Vec2d {\n  constructor(readonly x: number, readonly y: number) {}\n\n  public add(v: Vec2d): Vec2d {\n    return new Vec2d(this.x + v.x, this.y + v.y);\n  }\n\n  public equals(v: Vec2d): boolean {\n    return this.x === v.x && this.y === v.y;\n  }\n\n  public toString(): string {\n    return `(${this.x}, ${this.y})`;\n  }\n}\n","import { Cell } from \"../SearchMap\";\nimport { SearchParams } from \"../path-finder\";\nimport Vec2d from \"../utils/vec2d\";\n\nconst toCssClass = (cell: Cell): string => {\n  switch (cell) {\n    case Cell.Visited:\n      return \"visited\";\n    case Cell.Wall:\n      return \"wall\";\n    case Cell.Solution:\n      return \"solution\";\n  }\n  return \"\";\n};\n\ntype SearchMapProps = {\n  searchParams: SearchParams;\n  onMouseUp: (pos: Vec2d) => void;\n  onMouseDown: (pos: Vec2d) => void;\n  onMouseEnter: (pos: Vec2d) => void;\n};\n\nconst SearchMap = (props: SearchMapProps): JSX.Element => {\n  return (\n    <div className=\"Grid\">\n      <div className=\"Grid-cells\">\n        {props.searchParams.map.getRows().map((row, rowIdx) =>\n          row.map((cell, cellIdx) => (\n            <div\n              key={`${rowIdx}-${cellIdx}`}\n              className={toCssClass(cell)}\n              onMouseUp={() => props.onMouseUp(new Vec2d(cellIdx, rowIdx))}\n              onMouseDown={() => props.onMouseDown(new Vec2d(cellIdx, rowIdx))}\n              onMouseEnter={() => props.onMouseEnter(new Vec2d(cellIdx, rowIdx))}\n            >\n              {rowIdx === props.searchParams.start.y && cellIdx === props.searchParams.start.x && \"🔵\"}\n              {rowIdx === props.searchParams.target.y && cellIdx === props.searchParams.target.x && \"⭐\"}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchMap;\n","export default class Queue<T> {\n  constructor(private items: T[] = []) {}\n\n  public enqueue(...items: T[]): void {\n    this.items.push(...items);\n  }\n\n  public dequeue(): T | undefined {\n    return this.items.shift();\n  }\n\n  public isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  public get size(): number {\n    return this.items.length;\n  }\n}\n","import SearchMap from \"./SearchMap\";\nimport Queue from \"./utils/queue\";\nimport Vec2d from \"./utils/vec2d\";\n\nexport type SearchParams = {\n  map: SearchMap;\n  start: Vec2d;\n  target: Vec2d;\n};\n\ntype SearchNode = {\n  pos: Vec2d;\n  prev?: SearchNode;\n};\n\ntype SearchState = {\n  node: SearchNode;\n  visited: Set<string>;\n  foundTarget: boolean;\n};\n\nexport const breadthFirstSearch = function* (params: SearchParams): Generator<SearchState> {\n  const visited = new Set<string>([params.start.toString()]);\n  const queue = new Queue<SearchNode>([{ pos: params.start }]);\n\n  while (!queue.isEmpty()) {\n    const node = queue.dequeue();\n\n    if (node === undefined) {\n      break;\n    }\n\n    yield { node, visited, foundTarget: node.pos.equals(params.target) };\n\n    for (const neighbourPos of params.map.getNeighbours(node.pos)) {\n      const hash = neighbourPos.toString();\n\n      if (!visited.has(hash)) {\n        visited.add(hash);\n        queue.enqueue({\n          pos: neighbourPos,\n          prev: node,\n        });\n      }\n    }\n  }\n};\n","const sleep = async (ms: number): Promise<void> => {\n  await new Promise((r) => setTimeout(r, ms));\n};\n\nexport default sleep;\n","import { useState } from \"react\";\nimport SearchMap, { Cell } from \"../SearchMap\";\nimport SearchMapElem from \"./SearchMap\";\nimport { SearchParams, breadthFirstSearch } from \"../path-finder\";\nimport Vec2d from \"../utils/vec2d\";\nimport sleep from \"../utils/sleep\";\n\nconst getInitialSearchParams = (): SearchParams => ({\n  map: new SearchMap(30, 20),\n  start: new Vec2d(1, 1),\n  target: new Vec2d(28, 18),\n});\n\nconst PathFinder = (): JSX.Element => {\n  const [searchParams, setSearchParams] = useState(getInitialSearchParams());\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isMovingStart, setIsMovingStart] = useState(false);\n  const [isMovingTarget, setIsMovingTarget] = useState(false);\n\n  const setCell = (pos: Vec2d, cell: Cell): void => {\n    searchParams.map.setCell(pos, cell);\n    setSearchParams({ ...searchParams });\n  };\n\n  const setStart = (pos: Vec2d): void => {\n    searchParams.start = pos;\n    searchParams.map.setCell(pos, Cell.Empty);\n    setSearchParams({ ...searchParams });\n  };\n\n  const setTarget = (pos: Vec2d): void => {\n    searchParams.target = pos;\n    searchParams.map.setCell(pos, Cell.Empty);\n    setSearchParams({ ...searchParams });\n  };\n\n  const handleMouseUp = (pos: Vec2d): void => {\n    setIsDrawing(false);\n    setIsMovingStart(false);\n    setIsMovingTarget(false);\n  };\n\n  const handleMouseDown = (pos: Vec2d): void => {\n    if (pos.equals(searchParams.start)) {\n      setIsMovingStart(true);\n    } else if (pos.equals(searchParams.target)) {\n      setIsMovingTarget(true);\n    } else {\n      setIsDrawing(true);\n      setCell(pos, searchParams.map.isEmpty(pos) ? Cell.Wall : Cell.Empty);\n    }\n  };\n\n  const handleMouseEnter = (pos: Vec2d): void => {\n    if (isMovingStart) {\n      setStart(pos);\n    } else if (isMovingTarget) {\n      setTarget(pos);\n    } else if (isDrawing) {\n      setCell(pos, Cell.Wall);\n    }\n  };\n\n  const handleStartClick = async (): Promise<void> => {\n    let targetNode;\n\n    // @ts-ignore\n    for (const searchState of breadthFirstSearch(searchParams)) {\n      setCell(searchState.node.pos, Cell.Visited);\n\n      if (searchState.foundTarget) {\n        targetNode = searchState.node;\n        break;\n      }\n\n      await sleep(25);\n    }\n\n    if (targetNode) {\n      const path: Vec2d[] = [];\n\n      while (targetNode.prev) {\n        path.unshift(targetNode.pos);\n        targetNode = targetNode.prev;\n      }\n\n      path.unshift(searchParams.start);\n\n      for (const pos of path) {\n        setCell(pos, Cell.Solution);\n        await sleep(50);\n      }\n    }\n  };\n\n  const handleResetClick = (): void => {\n    setSearchParams(getInitialSearchParams());\n  };\n\n  const handleGenerateClick = (): void => {\n    const searchParams = getInitialSearchParams();\n    searchParams.map.generateWalls();\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <div className=\"PathFinder\">\n      <div className=\"Controls\">\n        <button onClick={handleStartClick}>Start</button>\n        <button onClick={handleResetClick}>Reset</button>\n        <button onClick={handleGenerateClick}>Generate walls</button>\n      </div>\n      <SearchMapElem\n        searchParams={searchParams}\n        onMouseUp={handleMouseUp}\n        onMouseDown={handleMouseDown}\n        onMouseEnter={handleMouseEnter}\n      />\n    </div>\n  );\n};\n\nexport default PathFinder;\n","import PathFinder from \"./PathFinder/Components/PathFinder\";\n\nconst App = () => <PathFinder />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}