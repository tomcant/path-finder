{"version":3,"sources":["search/SearchMap.ts","search/utils/Vec2d.ts","search/search.ts","PathFinder.tsx","search/utils/Queue.ts","search/algorithms/breadth-first-search.ts","App.tsx","index.tsx"],"names":["Square","Vec2d","x","y","v","this","rewindPath","node","path","prev","unshift","pos","MovingState","SearchMap","width","height","rows","push","Array","fill","Empty","square","isWithinBounds","Error","toString","map","neighbours","dx","dy","neighbour","add","isEmpty","length","Queue","items","shift","size","breadthFirstSearch","params","visited","Set","start","queue","current","dequeue","found","equals","target","getNeighbours","neighbourPos","hash","has","enqueue","f","sleep","ms","a","Promise","r","setTimeout","getInitialMap","getInitialStart","getInitialTarget","PathFinder","useState","setMap","setStart","setTarget","setVisited","solution","setSolution","None","moving","setMoving","isDrawing","setIsDrawing","handleMouseDown","Start","Target","withCell","Wall","handleMouseEnter","handleStartClick","targetNode","handleResetClick","getClassName","className","onClick","generateWalls","squares","onMouseUp","onMouseDown","onMouseEnter","buildMapSquares","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxF,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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","file":"static/js/main.2b7d4d72.chunk.js","sourcesContent":["import Vec2d from \"./utils/Vec2d\";\n\nexport enum Square {\n  Empty,\n  Wall,\n}\n\nexport default class SearchMap {\n  private rows: Square[][] = [];\n\n  public constructor(width: number, height: number) {\n    while (height--) {\n      this.rows.push(Array(width).fill(Square.Empty));\n    }\n  }\n\n  public withCell(pos: Vec2d, square: Square): SearchMap {\n    if (!this.isWithinBounds(pos)) {\n      throw new Error(`Out of bounds: ${pos.toString()}`);\n    }\n\n    const map = new SearchMap(this.width, this.height);\n\n    map.rows = this.rows;\n    map.rows[pos.y][pos.x] = square;\n\n    return map;\n  }\n\n  public isEmpty(pos: Vec2d): boolean {\n    return this.rows[pos.y][pos.x] === Square.Empty;\n  }\n\n  public getNeighbours(pos: Vec2d): Vec2d[] {\n    const neighbours = [];\n\n    const dirs = [\n      { dx: 1, dy: 0 },\n      { dx: 0, dy: 1 },\n      { dx: -1, dy: 0 },\n      { dx: 0, dy: -1 },\n    ];\n\n    for (const { dx, dy } of dirs) {\n      const neighbour = pos.add(new Vec2d(dx, dy));\n\n      if (!this.isWithinBounds(neighbour)) {\n        continue;\n      }\n\n      if (this.isEmpty(neighbour)) {\n        neighbours.push(neighbour);\n      }\n    }\n\n    return neighbours;\n  }\n\n  private isWithinBounds(pos: Vec2d): boolean {\n    return pos.x >= 0 && pos.y >= 0 && pos.x < this.width && pos.y < this.height;\n  }\n\n  public get width(): number {\n    return this.rows[0].length;\n  }\n\n  public get height(): number {\n    return this.rows.length;\n  }\n\n  public generateWalls(): void {\n    this.rows = [\n      [0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 0, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2],\n      [0, 0, 0, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0],\n      [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0],\n      [0, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 0],\n      [0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0],\n      [0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 0, 2],\n      [2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2],\n      [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2],\n      [2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 2],\n      [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2],\n      [2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2],\n      [2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 2],\n      [2, 0, 0, 0, 0, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2],\n      [2, 2, 2, 0, 2, 0, 2, 0, 0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2],\n      [0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 2, 0, 2],\n      [0, 2, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0],\n      [0, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 2, 0, 2, 0, 2, 2, 0],\n      [0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 0, 2, 0, 0],\n      [0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ];\n  }\n}\n","export default class Vec2d {\n  constructor(readonly x: number, readonly y: number) {}\n\n  public add(v: Vec2d): Vec2d {\n    return new Vec2d(this.x + v.x, this.y + v.y);\n  }\n\n  public equals(v: Vec2d): boolean {\n    return this.x === v.x && this.y === v.y;\n  }\n\n  public toString(): string {\n    return `(${this.x}, ${this.y})`;\n  }\n}\n","import SearchMap from \"./SearchMap\";\nimport Vec2d from \"./utils/Vec2d\";\n\nexport type SearchParams = {\n  map: SearchMap;\n  start: Vec2d;\n  target: Vec2d;\n};\n\nexport type SearchNode = {\n  pos: Vec2d;\n  prev?: SearchNode;\n};\n\nexport type SearchState = {\n  current: SearchNode;\n  visited: Set<string>;\n  found: boolean;\n};\n\nexport const rewindPath = (node: SearchNode): Vec2d[] => {\n  const path = [];\n\n  while (node.prev) {\n    path.unshift(node.pos);\n    node = node.prev;\n  }\n\n  return path;\n};\n","import { useState } from \"react\";\nimport Vec2d from \"./search/utils/Vec2d\";\nimport { rewindPath } from \"./search/search\";\nimport SearchMap, { Square } from \"./search/SearchMap\";\n\nimport breadthFirstSearch from \"./search/algorithms/breadth-first-search\";\n\nconst sleep = async (ms: number): Promise<void> => {\n  await new Promise((r) => setTimeout(r, ms));\n};\n\nenum MovingState {\n  None,\n  Start,\n  Target,\n}\n\nconst getInitialMap = () => new SearchMap(30, 20);\nconst getInitialStart = () => new Vec2d(1, 1);\nconst getInitialTarget = () => new Vec2d(28, 18);\n\nconst PathFinder = (): JSX.Element => {\n  const [map, setMap] = useState(getInitialMap());\n  const [start, setStart] = useState(getInitialStart());\n  const [target, setTarget] = useState(getInitialTarget());\n  const [visited, setVisited] = useState(new Set<string>());\n  const [solution, setSolution] = useState(new Set<string>());\n\n  const [moving, setMoving] = useState(MovingState.None);\n  const [isDrawing, setIsDrawing] = useState(false);\n\n  const handleMouseUp = (): void => {\n    setMoving(MovingState.None);\n    setIsDrawing(false);\n  };\n\n  const handleMouseDown = (pos: Vec2d): void => {\n    if (pos.equals(start)) {\n      setMoving(MovingState.Start);\n      return;\n    }\n\n    if (pos.equals(target)) {\n      setMoving(MovingState.Target);\n      return;\n    }\n\n    setIsDrawing(true);\n    setMap(map.withCell(pos, map.isEmpty(pos) ? Square.Wall : Square.Empty));\n  };\n\n  const handleMouseEnter = (pos: Vec2d): void => {\n    if (moving === MovingState.Start) {\n      setStart(pos);\n      return;\n    }\n\n    if (moving === MovingState.Target) {\n      setTarget(pos);\n      return;\n    }\n\n    if (isDrawing) {\n      setMap(map.withCell(pos, Square.Wall));\n    }\n  };\n\n  const handleStartClick = async (): Promise<void> => {\n    let targetNode;\n\n    // @ts-ignore\n    for (const { current, found, visited } of breadthFirstSearch({ map, start, target })) {\n      setVisited(new Set([...visited]));\n\n      if (found) {\n        targetNode = current;\n        break;\n      }\n\n      await sleep(20);\n    }\n\n    if (targetNode) {\n      for (const pos of rewindPath(targetNode)) {\n        // @ts-ignore\n        setSolution(new Set([...solution.add(pos.toString())]));\n        await sleep(40);\n      }\n    }\n  };\n\n  const handleResetClick = (): void => {\n    setMap(getInitialMap());\n    setStart(getInitialStart());\n    setTarget(getInitialTarget());\n    setVisited(new Set<string>());\n    setSolution(new Set<string>());\n  };\n\n  const handleGenerateMapClick = (): void => {\n    handleResetClick();\n    const map = getInitialMap();\n    map.generateWalls();\n    setMap(map);\n  };\n\n  const getClassName = (pos: Vec2d): string => {\n    if (!map.isEmpty(pos)) {\n      return \"wall\";\n    }\n\n    if (start.equals(pos)) {\n      return \"start\";\n    }\n\n    if (target.equals(pos)) {\n      return \"target\";\n    }\n\n    if (solution.has(pos.toString())) {\n      return \"solution\";\n    }\n\n    if (visited.has(pos.toString())) {\n      return \"visited\";\n    }\n\n    return \"\";\n  };\n\n  const buildMapSquares = (): JSX.Element[] => {\n    const squares = [];\n\n    for (let y = 0; y < map.height; ++y) {\n      for (let x = 0; x < map.width; ++x) {\n        const pos = new Vec2d(x, y);\n\n        squares.push(\n          <div\n            key={pos.toString()}\n            className={getClassName(pos)}\n            onMouseUp={() => handleMouseUp()}\n            onMouseDown={() => handleMouseDown(pos)}\n            onMouseEnter={() => handleMouseEnter(pos)}\n          />\n        );\n      }\n    }\n\n    return squares;\n  };\n\n  return (\n    <div className=\"PathFinder\">\n      <div className=\"Controls\">\n        <button onClick={handleStartClick}>Start</button>\n        <button onClick={handleResetClick}>Reset</button>\n        <button onClick={handleGenerateMapClick}>Generate map</button>\n      </div>\n      <div className=\"Map\">{buildMapSquares()}</div>\n    </div>\n  );\n};\n\nexport default PathFinder;\n","export default class Queue<T> {\n  constructor(private items: T[] = []) {}\n\n  public enqueue(...items: T[]): void {\n    this.items.push(...items);\n  }\n\n  public dequeue(): T | undefined {\n    return this.items.shift();\n  }\n\n  public isEmpty(): boolean {\n    return this.size === 0;\n  }\n\n  public get size(): number {\n    return this.items.length;\n  }\n}\n","import { SearchState, SearchNode, SearchParams } from \"../search\";\nimport Queue from \"../utils/Queue\";\n\nconst breadthFirstSearch = function* (params: SearchParams): Generator<SearchState> {\n  const visited = new Set<string>([params.start.toString()]);\n  const queue = new Queue<SearchNode>([{ pos: params.start }]);\n\n  while (!queue.isEmpty()) {\n    const current = queue.dequeue() as SearchNode;\n\n    yield { current, visited, found: current.pos.equals(params.target) };\n\n    for (const neighbourPos of params.map.getNeighbours(current.pos)) {\n      const hash = neighbourPos.toString();\n\n      if (!visited.has(hash)) {\n        visited.add(hash);\n        queue.enqueue({\n          pos: neighbourPos,\n          prev: current,\n        });\n      }\n    }\n  }\n};\n\nexport default breadthFirstSearch;\n","import PathFinder from \"./PathFinder\";\n\nconst App = () => <PathFinder />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}